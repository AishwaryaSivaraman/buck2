# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under both the MIT license found in the
# LICENSE-MIT file in the root directory of this source tree and the Apache
# License, Version 2.0 found in the LICENSE-APACHE file in the root directory
# of this source tree.

load("@fbcode_macros//build_defs:sanitizers.bzl", "sanitizers")
load("@prelude//:asserts.bzl", "asserts")

def _get_labels(ctx: bxl.Context, modifiers: list[str] | None) -> list[str]:
    targets = ctx.configured_targets("fbcode//buck2/tests/targets/rules/sh_test:test", modifiers = modifiers)
    providers = ctx.analysis(targets).providers()
    test_info = providers[ExternalRunnerTestInfo]
    return test_info.labels

def _impl(ctx: bxl.Context):
    labels = _get_labels(ctx, modifiers = ["ovr_config//build_mode/constraints:no-san"])
    for sanitizer in sanitizers.SANITIZERS.values():
        asserts.true(sanitizer not in labels, "Did not expect to find sanitizer `{}` in labels `{}`".format(
            sanitizer,
            labels,
        ))

    for sanitizer in ["asan", "asan-ubsan"]:
        labels = _get_labels(ctx, modifiers = ["ovr_config//build_mode/constraints:{}".format(sanitizer)])
        asserts.true(sanitizer in labels, "Expected to find sanitizer `{}` in labels `{}`".format(sanitizer, labels))
        for other in sanitizers.SANITIZERS.values():
            if sanitizer != other:
                asserts.true(other not in labels, "Did not expect to find sanitizer `{}` in labels `{}`".format(
                    other,
                    labels,
                ))

test = bxl_main(
    impl = _impl,
    cli_args = {},
)
