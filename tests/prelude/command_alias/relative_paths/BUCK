load("@fbcode//buck2/tests/prelude:py_assertion.bzl", "py_assertion")

oncall("build_infra")

prelude = native

# Test to verify that relative paths in args actually work
prelude.export_file(
    name = "relative_path_test_file",
    src = "test_file",
)

prelude.command_alias(
    name = "relative_path_sh",
    args = [
        "sh",
        "-c",
        "cat $1",
        "--",
        "$(location :relative_path_test_file)",
    ],
    # FIXME(JakobDegen): Bug. Doesn't work without this because we don't quote
    # the `RunInfo` this emits in the below `command_alias`
    run_using_single_arg = True,
)

prelude.command_alias(
    name = "relative_path_win",
    args = [
        "cmd.exe",
        "/c",
        "type",
        "$(location :relative_path_test_file)",
    ],
    # FIXME(JakobDegen): Bug. Can't be cross-built. Also add a proper test
    exec_compatible_with = ["ovr_config//os:windows"],
    # FIXME(JakobDegen): Bug. Doesn't work without this because we don't quote
    # the `RunInfo` this emits in the below `command_alias`
    run_using_single_arg = True,
)

prelude.command_alias(
    name = "relative_path",
    platform_exe = {
        "linux": ":relative_path_sh",
        "macos": ":relative_path_sh",
        "windows": ":relative_path_win",
    },
)

py_assertion(
    name = "check_relative_paths",
    script = """
import subprocess
import sys
assert (
    subprocess.check_output([sys.argv[1]]).decode().strip()
    == "foo"
)
""",
    script_args = ["$(exe_target :relative_path)"],
)
