constraint_setting(
    name = "os",
)

constraint_value(
    name = "windows",
    constraint_setting = ":os",
)

constraint_value(
    name = "linux",
    constraint_setting = ":os",
)

platform(
    name = "p-linux",
    constraint_values = [
        ":linux",
    ],
)

platform(
    name = "p-windows",
    constraint_values = [
        ":windows",
    ],
)

execution_platform(
    name = "p-exec-windows",
    platform = ":p-windows",
)

execution_platform(
    name = "p-exec-linux",
    platform = ":p-linux",
)

execution_platforms(
    name = "platforms",
    platforms = [":p-exec-windows", ":p-exec-linux"],
)

stub(
    name = "windows-only",
    srcs = select({
        # In test we run the query with target platform linux,
        # this select does not have DEFAULT,
        # but it should not fail because it should not be evaluated at all,
        # because of `compatible_with` check.
        ":windows": [],
    }),
    compatible_with = [":windows"],
)

stub(
    name = "windows-only-undeclared",
    srcs = select({
        # This rule is only compatible with windows, however we don't declare that
        ":windows": [],
    }),
)

stub(
    name = "windows-only-deps",
    deps = [
        ":windows-only-undeclared",
        ":windows-only",
    ],
    compatible_with = [":windows"],
)

stub(
    name = "windows-only-exec-deps",
    exec_deps = [
        ":windows-only-undeclared",
        ":windows-only",
    ],
)
