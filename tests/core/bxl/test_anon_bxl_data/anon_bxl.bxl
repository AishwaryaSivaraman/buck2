# Copyright (c) Meta Platforms, Inc. and affiliates.
#
# This source code is licensed under both the MIT license found in the
# LICENSE-MIT file in the root directory of this source tree and the Apache
# License, Version 2.0 found in the LICENSE-APACHE file in the root directory
# of this source tree.

def _assert_eq(a, b):
    if a != b:
        fail("Expected {} == {}".format(a, b))

Info = provider(fields = {
    "hello": provider_field(Artifact),
    "world": provider_field(Artifact),
    "x": int,
})

def _my_anon_impl(bxl_ctx: bxl.Context, attrs: struct) -> list[Provider]:
    action = bxl_ctx.bxl_actions().actions
    out = action.write("res.txt", "foo_bar")
    hello = action.write("hello.txt", "hello")
    world = action.write("world.txt", "world")
    info = Info(
        x = attrs.x,
        hello = hello,
        world = world,
    )
    return [DefaultInfo(default_output = out), info]

anon = bxl.anon_rule(
    impl = _my_anon_impl,
    attrs = {
        "x": attrs.int(),
    },
)

def _define_anon(_ctx: bxl.Context):
    _assert_eq(type(anon), "rule")

define_anon = bxl_main(
    impl = _define_anon,
    cli_args = {},
)
