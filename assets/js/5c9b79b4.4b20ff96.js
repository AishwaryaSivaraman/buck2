"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4304],{28453:(e,s,t)=>{t.d(s,{R:()=>l,x:()=>a});var i=t(96540);const n={},r=i.createContext(n);function l(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),i.createElement(r.Provider,{value:s},e.children)}},88706:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"prelude/rules/haskell_binary","title":"haskell_binary","description":"name","source":"@site/../docs/prelude/rules/haskell_binary.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/haskell_binary","permalink":"/docs/prelude/rules/haskell_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"halide_library","permalink":"/docs/prelude/rules/halide_library"},"next":{"title":"haskell_ghci","permalink":"/docs/prelude/rules/haskell_ghci"}}');var n=t(74848),r=t(28453);t(56289);const l={},a="haskell_binary",o={},d=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"haskell_binary",children:"haskell_binary"})}),"\n",(0,n.jsx)(s.h2,{id:"name",children:"name"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _apple_platforms: dict[str, str] = ...,\n    _cxx_toolchain: str = ...,\n    _haskell_toolchain: str = ...,\n    auto_link_groups: bool = ...,\n    compiler_flags: list[str] = ...,\n    contacts: list[str] = ...,\n    default_host_platform: None | str = ...,\n    deps: list[str] = ...,\n    deps_query: None | str = ...,\n    enable_profiling: bool = ...,\n    ghci_platform_preload_deps: list[(str, list[str])] = ...,\n    ghci_preload_deps: list[str] = ...,\n    labels: list[str] = ...,\n    licenses: list[str] = ...,\n    link_deps_query_whole: bool = ...,\n    link_group_deps: list[str] = ...,\n    link_group_map: None | str | list[(str, list[(None | str | list[None | str], str, None | str | list[str], None | str)], None | dict[str, typing.Any])] = ...,\n    link_group_public_deps_label: None | str = ...,\n    link_style: None | str = ...,\n    linker_flags: list[str] = ...,\n    main: None | str = ...,\n    platform: None | str = ...,\n    platform_deps: list[(str, list[str])] = ...,\n    platform_linker_flags: list[(str, list[str])] = ...,\n    srcs: list[str] | dict[str, str] = ...,\n    template_deps: list[str] = ...,\n) -> None\n"})}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.code,{children:"haskell_binary()"})," rule represents a groups of Haskell sources and deps which build an executable."]}),"\n",(0,n.jsx)(s.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"compiler_flags"}),": Flags to pass to the Haskell compiler when compiling this rule's sources."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"deps"}),": Either ",(0,n.jsx)(s.code,{children:"haskell_library()"})," or ",(0,n.jsx)(s.code,{children:"prebuilt_haskell_library()"})," rules from which this rules sources import modules or native linkable rules exporting symbols this rules sources call into."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"link_group_deps"}),": Additional targets to traverse when building link groups, but which should not be direct dependencies of the main executable."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"link_group_public_deps_label"}),': Surface nodes with this label as "public" nodes in the main executable when linking with with link groups.']}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"link_style"}),": Determines whether to build and link this rule's dependencies statically or dynamically. Can be either ",(0,n.jsx)(s.code,{children:"static"}),", ",(0,n.jsx)(s.code,{children:"static_pic"})," or ",(0,n.jsx)(s.code,{children:"shared"}),"."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"main"}),": The main module serving as the entry point into the binary. If not specified, the compiler default is used."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"platform_deps"}),": Platform specific dependencies. These should be specified as a list of pairs where the first element is an un-anchored regex (in java.util.regex.Pattern syntax) against which the platform name is matched, and the second element is a list of dependencies (same format as ",(0,n.jsx)(s.code,{children:"deps"}),") that are exported if the platform matches the regex. See ",(0,n.jsx)(s.code,{children:"deps"})," for more information."]}),"\n",(0,n.jsxs)(s.li,{children:[(0,n.jsx)(s.code,{children:"srcs"}),": A list of Haskell sources to be built by this rule. The dictionary option is deprecated."]}),"\n"]}),"\n",(0,n.jsx)(s.h4,{id:"details",children:"Details"}),"\n",(0,n.jsx)(s.p,{children:"Examples:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"\nhaskell_binary(\n  name = 'foo',\n  srcs = [\n    'Foo.hs',\n  ],\n)\n\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);