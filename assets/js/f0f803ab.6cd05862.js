"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7181],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var s=r(96540);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},39110:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>a,metadata:()=>s,toc:()=>_});const s=JSON.parse('{"id":"prelude/rules/android_binary","title":"android_binary","description":"name","source":"@site/../docs/prelude/rules/android_binary.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/android_binary","permalink":"/docs/prelude/rules/android_binary","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_app_modularity","permalink":"/docs/prelude/rules/android_app_modularity"},"next":{"title":"android_build_config","permalink":"/docs/prelude/rules/android_build_config"}}');var n=r(74848),i=r(28453);r(56289);const a={},o="android_binary",l={},_=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"android_binary",children:"android_binary"})}),"\n",(0,n.jsx)(t.h2,{id:"name",children:"name"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _android_toolchain: str = ...,\n    _apple_platforms: dict[str, str] = ...,\n    _cxx_toolchain: str = ...,\n    _dex_toolchain: str = ...,\n    _exec_os_type: str = ...,\n    _is_building_android_binary: bool = ...,\n    _is_force_single_cpu: bool = ...,\n    _is_force_single_default_cpu: bool = ...,\n    _java_toolchain: str = ...,\n    aapt2_keep_raw_values: bool = ...,\n    aapt2_locale_filtering: bool = ...,\n    aapt2_preferred_density: None | str = ...,\n    additional_aapt_params: list[str] = ...,\n    allow_r_dot_java_in_secondary_dex: bool = ...,\n    allowed_duplicate_resource_types: list[str] = ...,\n    android_sdk_proguard_config: None | str = ...,\n    application_module_blocklist: None | list[str] = ...,\n    application_module_configs: dict[str, list[str]] = ...,\n    application_module_dependencies: None | dict[str, list[str]] = ...,\n    asset_compression_algorithm: None | str = ...,\n    banned_duplicate_resource_types: list[str] = ...,\n    build_config_values: list[str] = ...,\n    build_config_values_file: None | str = ...,\n    build_string_source_map: bool = ...,\n    compiled_resource_apks: list[str] = ...,\n    compress_asset_libraries: bool = ...,\n    constraint_overrides: list[str] = ...,\n    contacts: list[str] = ...,\n    cpu_filters: list[str] = ...,\n    default_host_platform: None | str = ...,\n    deps: list[str] = ...,\n    dex_compression: None | str = ...,\n    dex_group_lib_limit: int = ...,\n    disable_pre_dex: bool = ...,\n    duplicate_class_checker_enabled: bool = ...,\n    duplicate_resource_behavior: str = ...,\n    duplicate_resource_whitelist: None | str = ...,\n    enable_bootstrap_dexes: bool = ...,\n    enable_relinker: bool = ...,\n    exopackage_modes: list[str] = ...,\n    extra_filtered_resources: list[str] = ...,\n    extra_no_compress_asset_extensions: list[str] = ...,\n    field_ref_count_buffer_space: int = ...,\n    ignore_aapt_proguard_config: bool = ...,\n    includes_vector_drawables: bool = ...,\n    is_cacheable: bool = ...,\n    is_voltron_language_pack_enabled: bool = ...,\n    keystore: str,\n    labels: list[str] = ...,\n    licenses: list[str] = ...,\n    linear_alloc_hard_limit: int = ...,\n    locales: list[str] = ...,\n    manifest: None | str = ...,\n    manifest_entries: dict[str, typing.Any] = ...,\n    manifest_skeleton: None | str = ...,\n    method_ref_count_buffer_space: int = ...,\n    min_sdk_version: None | int = ...,\n    minimize_primary_dex_size: bool = ...,\n    module_manifest_skeleton: None | str = ...,\n    native_library_bolt_args: None | dict[str, list[str]] = ...,\n    native_library_merge_code_generator: None | str = ...,\n    native_library_merge_glue: None | str = ...,\n    native_library_merge_linker_args: None | dict[str, list[str]] = ...,\n    native_library_merge_linker_args_all: list[str] = ...,\n    native_library_merge_map: None | dict[str, list[str]] = ...,\n    native_library_merge_non_asset_libs: bool = ...,\n    native_library_merge_sequence: None | list = ...,\n    native_library_merge_sequence_blocklist: None | list[str] = ...,\n    native_library_pick_first: list[str] = ...,\n    no_auto_add_overlay_resources: bool = ...,\n    no_auto_version_resources: bool = ...,\n    no_dx: list[str] = ...,\n    no_version_transitions_resources: bool = ...,\n    optimization_passes: int = ...,\n    package_asset_libraries: bool = ...,\n    package_type: str = ...,\n    packaged_locales: list[str] = ...,\n    packaging_options: dict[str, list[str]] = ...,\n    platform_override: None | str = ...,\n    post_filter_resources_cmd: None | str = ...,\n    preprocess_java_classes_bash: None | str = ...,\n    preprocess_java_classes_cmd: None | str = ...,\n    preprocess_java_classes_deps: list[str] = ...,\n    primary_dex_patterns: list[str] = ...,\n    proguard_config: None | str = ...,\n    proguard_jvm_args: list[str] = ...,\n    relinker_extra_args: list[str] = ...,\n    relinker_extra_deps: list[str] = ...,\n    relinker_whitelist: list[str] = ...,\n    resource_compression: str = ...,\n    resource_filter: list[str] = ...,\n    resource_stable_ids: None | str = ...,\n    resource_union_package: None | str = ...,\n    secondary_dex_weight_limit: None | int = ...,\n    skip_crunch_pngs: None | bool = ...,\n    skip_proguard: bool = ...,\n    strip_libraries: bool = ...,\n    trim_resource_ids: bool = ...,\n    use_split_dex: bool = ...,\n    validation_deps: list[str] = ...,\n    xz_compression_level: int = ...,\n) -> None\n"})}),"\n",(0,n.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"native_library_merge_linker_args_all"}),": Extra linker arguments passed to all merged libraries."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"relinker_extra_args"}),": Extra arguments passed when relinking all libraries."]}),"\n"]})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);