"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7186],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var n=r(96540);const s={},i=n.createContext(s);function a(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}},92958:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"prelude/rules/android_resource","title":"android_resource","description":"name","source":"@site/../docs/prelude/rules/android_resource.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/android_resource","permalink":"/docs/prelude/rules/android_resource","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_prebuilt_aar","permalink":"/docs/prelude/rules/android_prebuilt_aar"},"next":{"title":"apk_genrule","permalink":"/docs/prelude/rules/apk_genrule"}}');var s=r(74848),i=r(28453);r(56289);const a={},o="android_resource",d={},l=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"android_resource",children:"android_resource"})}),"\n",(0,s.jsx)(t.h2,{id:"name",children:"name"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _android_toolchain: str = ...,\n    _apple_platforms: dict[str, str] = ...,\n    _build_only_native_code: bool = ...,\n    _java_toolchain: str = ...,\n    allowlisted_locales: None | list[str] = ...,\n    assets: None | str | dict[str, str] = ...,\n    contacts: list[str] = ...,\n    default_host_platform: None | str = ...,\n    deps: list[str] = ...,\n    has_whitelisted_strings: bool = ...,\n    labels: list[str] = ...,\n    licenses: list[str] = ...,\n    manifest: None | str = ...,\n    package: None | str = ...,\n    project_assets: None | str = ...,\n    project_res: None | str = ...,\n    res: None | str | dict[str, str] = ...,\n    resource_union: bool = ...,\n) -> None\n"})}),"\n",(0,s.jsxs)(t.p,{children:["An ",(0,s.jsx)(t.code,{children:"android_resource()"})," rule is used to bundle Android resources that are traditionally stored in ",(0,s.jsx)(t.code,{children:"res"})," and ",(0,s.jsx)(t.code,{children:"assets"})," directories."]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"deps"}),": Other ",(0,s.jsx)(t.code,{children:"android_resource"})," rules to include via ",(0,s.jsx)(t.code,{children:"-S"})," when running ",(0,s.jsx)(t.code,{children:"aapt"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"manifest"}),": An optional ",(0,s.jsx)(t.a,{href:"http://developer.android.com/guide/topics/manifest/manifest-intro.html",children:"Android Manifest"})," for the to declare any permissions or intents it may need or want to handle. May either be a file or an ",(0,s.jsx)(t.code,{children:"android_manifest()"})," target."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"package"}),": Java package for the ",(0,s.jsx)(t.code,{children:"R.java"})," file that will be generated for these resources."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,s.jsxs)(t.p,{children:["The output of an ",(0,s.jsx)(t.code,{children:"android_resource()"})," is an ",(0,s.jsx)(t.code,{children:"R.txt"})," file\ngenerated via ",(0,s.jsx)(t.code,{children:"aapt --output-text-symbols"}),"."]}),"\n",(0,s.jsx)(t.p,{children:"Examples:"}),"\n",(0,s.jsxs)(t.p,{children:["Most of the time, an ",(0,s.jsx)(t.code,{children:"android_resource"})," rule defines only ",(0,s.jsx)(t.code,{children:"name"}),", ",(0,s.jsx)(t.code,{children:"res"}),", and ",(0,s.jsx)(t.code,{children:"package"}),". By convention,\nsuch simple rules are often named ",(0,s.jsx)(t.code,{children:"res"}),":"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\nandroid_resource(\n  name = 'res',\n  res = subdir_glob([('res', '**')]),\n  package = 'com.example',\n)\n\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);