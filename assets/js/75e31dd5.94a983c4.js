"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5321],{28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>l});var n=i(96540);const s={},r=n.createContext(s);function a(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(r.Provider,{value:t},e.children)}},44721:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"prelude/rules/android_app_modularity","title":"android_app_modularity","description":"name","source":"@site/../docs/prelude/rules/android_app_modularity.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/android_app_modularity","permalink":"/docs/prelude/rules/android_app_modularity","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"android_aar","permalink":"/docs/prelude/rules/android_aar"},"next":{"title":"android_binary","permalink":"/docs/prelude/rules/android_binary"}}');var s=i(74848),r=i(28453);i(56289);const a={},l="android_app_modularity",o={},d=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4}];function c(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"android_app_modularity",children:"android_app_modularity"})}),"\n",(0,s.jsx)(t.h2,{id:"name",children:"name"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _android_toolchain: str = ...,\n    _apple_platforms: dict[str, str] = ...,\n    _build_only_native_code: bool = ...,\n    application_module_blocklist: None | list[str] = ...,\n    application_module_configs: dict[str, list[str]] = ...,\n    application_module_dependencies: None | dict[str, list[str]] = ...,\n    contacts: list[str] = ...,\n    default_host_platform: None | str = ...,\n    deps: list[str] = ...,\n    labels: list[str] = ...,\n    licenses: list[str] = ...,\n    no_dx: list[str] = ...,\n    should_include_classes: bool = ...,\n    should_include_libraries: bool = ...,\n) -> None\n"})}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);