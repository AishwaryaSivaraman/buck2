"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7159],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(96540);const r={},i=s.createContext(r);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:t},e.children)}},77779:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"prelude/rules/apple_toolchain","title":"apple_toolchain","description":"name","source":"@site/../docs/prelude/rules/apple_toolchain.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/apple_toolchain","permalink":"/docs/prelude/rules/apple_toolchain","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apple_test","permalink":"/docs/prelude/rules/apple_test"},"next":{"title":"apple_toolchain_set","permalink":"/docs/prelude/rules/apple_toolchain_set"}}');var r=n(74848),i=n(28453);n(56289);const o={},a="apple_toolchain",l={},c=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apple_toolchain",children:"apple_toolchain"})}),"\n",(0,r.jsx)(t.h2,{id:"name",children:"name"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _apple_platforms: dict[str, str] = ...,\n    _internal_platform_path: None | str = ...,\n    _internal_sdk_path: None | str = ...,\n    actool: str,\n    architecture: str = ...,\n    build_version: None | str = ...,\n    codesign: str,\n    codesign_allocate: str,\n    codesign_identities_command: None | str = ...,\n    compile_resources_locally: bool = ...,\n    contacts: list[str] = ...,\n    copy_scene_kit_assets: str,\n    cxx_toolchain: str,\n    default_host_platform: None | str = ...,\n    developer_path: None | str = ...,\n    dsymutil: str,\n    dwarfdump: None | str = ...,\n    extra_linker_outputs: list[str] = ...,\n    ibtool: str,\n    installer: str = ...,\n    labels: list[str] = ...,\n    libtool: str,\n    licenses: list[str] = ...,\n    lipo: str,\n    mapc: None | str = ...,\n    merge_index_store: str = ...,\n    min_version: str = ...,\n    momc: str,\n    objdump: None | str = ...,\n    placeholder_tool: None | str = ...,\n    platform_path: None | str = ...,\n    requires_xcode_version_match: bool = ...,\n    sdk_environment: None | str = ...,\n    sdk_name: str = ...,\n    sdk_path: None | str = ...,\n    swift_toolchain: None | str = ...,\n    version: None | str = ...,\n    watch_kit_stub_binary: None | str = ...,\n    work_around_dsymutil_lto_stack_overflow_bug: None | bool = ...,\n    xcode_build_version: None | str = ...,\n    xcode_version: str,\n    xctest: str,\n) -> None\n"})}),"\n",(0,r.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);