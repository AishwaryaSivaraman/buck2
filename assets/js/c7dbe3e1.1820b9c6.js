"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[313],{28453:(e,t,n)=>{n.d(t,{R:()=>l,x:()=>r});var a=n(96540);const s={},i=a.createContext(s);function l(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),a.createElement(i.Provider,{value:t},e.children)}},63962:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"prelude/rules/apple_asset_catalog","title":"apple_asset_catalog","description":"name","source":"@site/../docs/prelude/rules/apple_asset_catalog.md","sourceDirName":"prelude/rules","slug":"/prelude/rules/apple_asset_catalog","permalink":"/docs/prelude/rules/apple_asset_catalog","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"ruleSidebar","previous":{"title":"apk_genrule","permalink":"/docs/prelude/rules/apk_genrule"},"next":{"title":"apple_binary","permalink":"/docs/prelude/rules/apple_binary"}}');var s=n(74848),i=n(28453);n(56289);const l={},r="apple_asset_catalog",o={},c=[{value:"name",id:"name",level:2},{value:"Parameters",id:"parameters",level:4},{value:"Details",id:"details",level:4}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apple_asset_catalog",children:"apple_asset_catalog"})}),"\n",(0,s.jsx)(t.h2,{id:"name",children:"name"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:"def name(\n    *,\n    name: str,\n    default_target_platform: None | str = ...,\n    target_compatible_with: list[str] = ...,\n    compatible_with: list[str] = ...,\n    exec_compatible_with: list[str] = ...,\n    visibility: list[str] = ...,\n    within_view: list[str] = ...,\n    metadata: OpaqueMetadata = ...,\n    tests: list[str] = ...,\n    modifiers: OpaqueMetadata = ...,\n    _apple_platforms: dict[str, str] = ...,\n    app_icon: None | str = ...,\n    contacts: list[str] = ...,\n    default_host_platform: None | str = ...,\n    dirs: list[str] = ...,\n    labels: list[str] = ...,\n    launch_image: None | str = ...,\n    licenses: list[str] = ...,\n    skip_universal_resource_dedupe: bool = ...,\n) -> None\n"})}),"\n",(0,s.jsxs)(t.p,{children:["An ",(0,s.jsx)(t.code,{children:"apple_asset_catalog()"})," rule contains resources stored in Apple asset catalog directories. This rule does not have any output on its own and can be built only as a dependency (either direct or transitive) of an ",(0,s.jsx)(t.code,{children:"apple_bundle()"})," rule, in which case all ",(0,s.jsx)(t.code,{children:"apple_asset_catalog()"})," rules that the bundle rule depends on are merged and placed into the final output bundle together."]}),"\n",(0,s.jsx)(t.h4,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"name"}),": name of the target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"default_target_platform"}),": specifies the default target platform, used when no platforms are specified on the command line"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"target_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with a configuration"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"exec_compatible_with"}),": a list of constraints that are required to be satisfied for this target to be compatible with an execution platform"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"visibility"}),": a list of visibility patterns restricting what targets can depend on this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"within_view"}),": a list of visibility patterns restricting what this target can depend on"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"metadata"}),": a key-value map of metadata associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"tests"}),": a list of targets that provide tests for this one"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"modifiers"}),": an array of modifiers associated with this target"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"app_icon"}),": An optional reference to a ",(0,s.jsx)(t.code,{children:".appiconset"})," containing a image set representing an application icon. (The extension itself should not be included.) This parameter may be specified at most once in a given ",(0,s.jsx)(t.code,{children:"apple_bundle"}),"'s transitive dependencies."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"launch_image"}),": An optional reference to a ",(0,s.jsx)(t.code,{children:".launchimage"})," containing a image set representing an application launch image. (The extension itself should not be included.) This parameter may be specified at most once in a given ",(0,s.jsx)(t.code,{children:"apple_bundle"}),"'s transitive dependencies."]}),"\n"]}),"\n",(0,s.jsx)(t.h4,{id:"details",children:"Details"}),"\n",(0,s.jsx)(t.p,{children:"Examples:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\napple_asset_catalog(\n  name = 'MyAssetCatalog',\n  dirs = [\n    'MyResources.xcassets',\n  ],\n)\n\n# A asset catalog with a app icon and launch image\napple_asset_catalog(\n  name = 'AssetCatalog',\n  dirs = [ 'AssetCatalog.xcassets' ],\n  app_icon = 'Icon',\n  launch_image = 'LaunchImage',\n)\n\n"})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);